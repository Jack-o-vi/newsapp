//apply plugin: 'java'
apply plugin: 'com.android.library'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.2.3'
    }
}

android {
    defaultPublishConfig "debug"
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    buildToolsVersion globalConfiguration["androidBuildToolsVersion"]

    defaultConfig {
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        versionCode globalConfiguration["androidVersionCode"]
        versionName globalConfiguration["androidVersionName"]
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'  // Some libraries have issues with this
        disable 'OldTargetApi'    // Due to Robolectric that modifies the manifest when running tests
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    def domainDependencies = rootProject.ext.domainDependencies
    def domainTestDependencies = rootProject.ext.domainTestDependencies
    def developmentDependencies = rootProject.ext.developmentDependencies

    api project(path: ":data")

    compileOnly domainDependencies.javaxAnnotation

    implementation domainDependencies.javaxInject
    implementation domainDependencies.rxJava
    implementation domainDependencies.arrow
    implementation developmentDependencies.kotlinSupport

    implementation domainDependencies.lifecycleRuntime
    implementation domainDependencies.lifecycleExtensions
    implementation domainDependencies.lifecycleCore
    annotationProcessor domainDependencies.lifecycleCompiler

    testImplementation domainTestDependencies.junit
    testImplementation domainTestDependencies.mockito
    testImplementation domainTestDependencies.assertj
}
